name: Fetch Instagram (hourly followers)

on:
  schedule:
    - cron: "0 * * * *"  # 毎時00分（UTC）
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  fetch-hourly-followers:
    strategy:
      matrix:
        env: [KITAKYUSHU, HONAMI, YUMEGAOKA, IRISO, OHTU]
    concurrency:
      group: fetch-hourly-followers-${{ github.ref }}-${{ matrix.env }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    environment: ${{ matrix.env }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: "18" }
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-node18-${{ hashFiles('**/package-lock.json') }}
      - name: Install
        run: npm install --prefer-offline --no-audit
      - name: Run collector (followers hourly)
        env:
          IG_ID: ${{ secrets.IG_ID }}
          FB_PAGE_TOKEN: ${{ secrets.FB_PAGE_TOKEN }}
          RUN_MODE: hourly_followers
        run: node scripts/fetch_followers_api.mjs

      - name: Duplicate to hourly path (JST) and update latest_hourly.json
        shell: bash
        run: |
          set -euo pipefail
          # JSTの本日ファイルを検出（時間条件なし、必ず処理対象）
          today_jst=$(TZ=Asia/Tokyo date +%Y-%m-%d)
          mapfile -t files < <(find data/account -type f -name "${today_jst}.json" | sort || true)
          echo "[debug] today_jst=${today_jst}"
          echo "[debug] found files (${#files[@]}):"; printf ' - %s\n' "${files[@]:-<none>}"
          if [ ${#files[@]} -eq 0 ]; then
            echo "No todays (JST) daily JSON found under data/account/**. Skip hourly duplication."
            exit 0
          fi
          for f in "${files[@]}"; do
            node -e '
              const fs=require("fs"), p=process.argv[1];
              const j=JSON.parse(fs.readFileSync(p,"utf8"));
              // アカウント名は「パス」から取得して正規化
              const m = p.match(/^data\/account\/([^/]+)\/\d{4}-\d{2}-\d{2}\.json$/);
              if(!m){ console.error("unexpected path:", p); process.exit(0); }
              const acc = m[1];
              // 日付・時刻は JST で算出（generated_at があればそれを優先）
              const z = j.generated_at ? new Date(j.generated_at) : new Date();
              const fmt = new Intl.DateTimeFormat("ja-JP",{ timeZone:"Asia/Tokyo", hour12:false,
                year:"numeric", month:"2-digit", day:"2-digit", hour:"2-digit" }).formatToParts(z)
                .reduce((o,{type,value})=> (o[type]=value,o),{});
              const dateJST = `${fmt.year}-${fmt.month}-${fmt.day}`;
              const HHJST   = fmt.hour;
              const dir = `data/account/${acc}/hourly/${dateJST}`;
              const out = `${dir}/${HHJST}.json`;
              fs.mkdirSync(dir,{recursive:true});
              fs.writeFileSync(out, JSON.stringify(j,null,2));
              fs.writeFileSync(`data/account/${acc}/latest_hourly.json`, JSON.stringify(j,null,2));
              console.log("wrote(JST)", out, "and updated latest_hourly.json");
            ' "$f"
          done  
      - name: Commit & push if changed
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A data/account
          if ! git diff --cached --quiet; then
            git commit -m "chore: update hourly followers for ${{ matrix.env }} [skip ci]"
            # push を最大3回リトライ（競合時は rebase して再試行）
            for i in 1 2 3; do
              if git push; then
                echo "Push succeeded on try $i"
                break
              fi
              echo "Push failed on try $i, retrying after rebase..."
              git pull --rebase
              sleep 2
            done
          fi
