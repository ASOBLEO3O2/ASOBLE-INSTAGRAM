name: Fetch Instagram (hourly followers)

on:
  schedule:
    - cron: "0 * * * *"  # 毎時00分（UTC）
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
   fetch-hourly-followers:
    strategy:
      max-parallel: 1
      matrix:
        env: [KITAKYUSHU, HONAMI, YUMEGAOKA, IRISO, OHTU]

    concurrency:
      group: fetch-hourly-followers-${{ github.ref }}-${{ matrix.env }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    environment: ${{ matrix.env }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: "18" }
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-node18-${{ hashFiles('**/package-lock.json') }}
      - name: Install
        run: |
          npm config set package-lock false
          npm install --prefer-offline --no-audit
      - name: Run collector (followers hourly)
        env:
          IG_ID: ${{ secrets.IG_ID }}
          FB_PAGE_TOKEN: ${{ secrets.FB_PAGE_TOKEN }}
          RUN_MODE: hourly_followers
        run: node scripts/fetch_followers_api.mjs

      - name: Fetch latest followers via Graph API and write hourly (JST)
        env:
          IG_ID: ${{ secrets.IG_ID }}
          FB_PAGE_TOKEN: ${{ secrets.FB_PAGE_TOKEN }}
        run: |
          node -e '
            const fs = require("fs");
            const fetch = global.fetch;
            (async () => {
              const igId = process.env.IG_ID;
              const token = process.env.FB_PAGE_TOKEN;
              const url = `https://graph.facebook.com/v23.0/${igId}?fields=username,followers_count&access_token=${token}`;
              const res = await fetch(url);
              if (!res.ok) {
                const t = await res.text();
                console.error("Graph API error:", res.status, t);
                process.exit(1);
              }
              const body = await res.json();
              const now = new Date();
              const fmt = new Intl.DateTimeFormat("ja-JP", { timeZone:"Asia/Tokyo", hour12:false,
                year:"numeric", month:"2-digit", day:"2-digit", hour:"2-digit" }).formatToParts(now)
                .reduce((o,{type,value}) => (o[type]=value,o), {});
              const dateJST = `${fmt.year}-${fmt.month}-${fmt.day}`;
              const hourJST = fmt.hour;
              const account = body.username;
              const data = {
                date: dateJST,
                generated_at: new Date(now.getTime()+9*60*60*1000).toISOString().replace("Z","+09:00"),
                account,
                source: "ig_graph_v23.0",
                metrics: { followers_count: body.followers_count }
              };
              const dir = `data/account/${account}/hourly/${dateJST}`;
              const out = `${dir}/${hourJST}.json`;
              fs.mkdirSync(dir, { recursive: true });
              fs.writeFileSync(out, JSON.stringify(data, null, 2));
              fs.writeFileSync(`data/account/${account}/latest_hourly.json`, JSON.stringify(data, null, 2));
              console.log("hourly written:", out);
            })().catch(e => { console.error(e); process.exit(1); });
          '
      - name: Debug (after generation, before upload)
        run: |
          echo "[debug] files after generation for ${{ matrix.env }}:"
          ls -R data/account || true
          echo "[debug] sample json:"
          head -n 20 data/account/*/*.json || true
          
      - name: Upload hourly artifacts (per store)
        uses: actions/upload-artifact@v4
        with:
          name: hourly-${{ matrix.env }}
          if-no-files-found: ignore
          # 生成し得るパスをまとめてアップロード
          path: |
           data/account/*/${{ env.today_jst }}.json
           data/account/*/hourly/**
           data/account/*/latest_hourly.json
   
   push-all:
    runs-on: ubuntu-latest
    needs: fetch-hourly-followers
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download all hourly artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: data/account
      - name: Debug (after download, before commit)
        run: |
          echo "[debug] files after artifact download:"
          ls -R data/account || true
          echo "[debug] git status before add:"
          git status --porcelain || true

      - name: Commit & single push      
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A data/account
          if git diff --cached --quiet; then
            echo "no changes to push"
            exit 0
          fi
          git commit -m "chore: update hourly followers (batch) [skip ci]"
          git push
